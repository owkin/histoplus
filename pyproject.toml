[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["histoplus"]

[project]
name = "histoplus"
version = "0.0.1"
description = "Extract cell mask from histology images"
authors = [
    {name = "Pierre-Antoine Bannier", email = "pierre-antoine.bannier@owkin.com"},
    {name = "Benjamin Adjadj", email = "benjamin.adjadj@owkin.com"},
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
  "numpy>=1.24.0",
  "torch>=2.4.1",
  "openslide-python>=1.3.1",
  "timm==1.0.8",
  "scikit-image>=0.24.0",
  "opencv-python-headless>=4.10.0.84",
  "pandas>=1.5",
  "tqdm>=4.66.5",
  "loguru>=0.7.2",
  "typer",
  "shapely>=2.1.0",
  "joblib>=1.4.2",
]

[project.urls]
homepage = "https://github.com/owkin/histoplus"
documentation = "https://owkin.github.io/histoplus"

[project.scripts]
histoplus = "histoplus.cli.app:main"

[project.optional-dependencies]
dev = [
  "ipdb>=0.13.13",
]
linting = [
  "mypy>=1.4",
  "pre-commit>=2.20.0",
  "ruff>=0.1.2",
  "pandas-stubs",
  "types-docutils",
  "types-python-dateutil",
  "types-setuptools",
  "types-Jinja2",
  "types-MarkupSafe",
  "types-PyYAML",
  "typing_extensions"
]
testing = [
  "pytest",
  "coverage",
  "pytest-cov",
  "pytest-sphinx",
  "pytest-runner",
  "pytest-profiling"
]

[tool.ruff]
exclude = [
  ".git",
  ".github",
  ".dvc",
  "__pycache__",
  ".venv",
  ".mypy_cache",
   ".ruff_cache",
  ".pytest_cache",
  "conf.py",
  "helpers/data/protobufs/generated",
]
lint.ignore = [
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "D105",  # undocumented magic method
  "E501",  # line too long, handled by black
  "E731",  # lambda-assignment
  "PLR0904", # too many public methods
  "PLR0913", # too many arguments
  "PLR2004", # magic value comparison
  "B019", # use of cache methods
  "B009", # getattr with constant value
  "N812", # lowercase imported as non constant
  "PLW2901", # loop variable overwritten by assignment
  "PT011", # broad pytest errors
  "N801", # necessary to respect TilingTool's name conventions
  "N806", # capital letters for dimensions
  "PLC0415", # import at the top of the file
  "PLW1641", # object does not implement hash method
]
lint.select = [
  "D",   # pydocstyle
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming conventions
  "C",   # flake8-comprehensions
  "B",   # flake8-bugbear
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "C90", # mccabe included in flake8
  "ASYNC", # flake8-async
]
line-length = 88  # Must be consistent with black parameter
target-version = "py310"  # Must be aligned with the Python lower bound

[tool.ruff.lint.isort]
known-first-party = ["histoplus"]
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
